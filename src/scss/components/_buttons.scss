// CONFIG BUTTONS STYLES
// It takes the KEY to build the selector
$BUTTONS: (
  primary: (
    textColor: --button-primary-text,
    backgroundColor: --button-primary-background,
    borderColor: --button-primary-border,
    textHoverColor: --button-primary-hover-text,
    backgroundHoverColor: --button-primary-hover-background,
    borderHoverColor: --button-primary-hover-border,
  ),
  secondary: (
    textColor: --button-secondary-text,
    backgroundColor: --button-secondary-background,
    borderColor: --button-secondary-border,
    textHoverColor: --button-secondary-hover-text,
    backgroundHoverColor: --button-secondary-hover-background,
    borderHoverColor: --button-secondary-hover-border,
  ),
);

// APPLIES THE STYLES TO THE ELEMENT
@mixin buttonStyles(
  $textColor,
  $backgroundColor,
  $borderColor,
  $textHoverColor,
  $backgroundHoverColor,
  $borderHoverColor
) {
  $textColor: var($textColor);
  $backgroundColor: var($backgroundColor);
  $borderColor: var($borderColor);
  $textHoverColor: var($textHoverColor);
  $backgroundHoverColor: var($backgroundHoverColor);
  $borderHoverColor: var($borderHoverColor);

  color: $textColor;
  border: $borderColor;
  background: $backgroundColor;
  transition: all $fast $linear;

  &:focus,
  &:hover {
    color: $textHoverColor;
    border: $borderHoverColor;
    background: $backgroundHoverColor;
  }

  &:active {
    color: var(--button-active-text);
    border: var(--button-active-border);
    background: var(--button-active-background);
  }
}

// RESET STYLES
%button-base {
  font-size: 1rem;
  font-weight: $bold;
  color: transparent;
  display: inline-block;
  background: {
    image: url(../images/icons/button-border-glow.svg);
    repeat: no-repeat;
    position: 0 0;
    color: transparent;
  }
  border: 0.125rem solid;
  border-radius: 0.5625rem;
  outline: none;
  cursor: pointer;
  padding: 0.5rem 1.5rem;
  line-height: 1.4;
  text-decoration: none;
  text-transform: uppercase;
  position: relative;
  overflow: hidden;

  &[disabled] {
    pointer-events: none;
    opacity: 0.6;
  }
}

// DEFAULT CLASS
.button {
  @extend %button-base;
}

// CREATES THE MODIFERS
@each $class, $styles in $BUTTONS {
  .button--#{$class} {
    @include buttonStyles(
      map-get($styles, 'textColor'),
      map-get($styles, 'backgroundColor'),
      map-get($styles, 'borderColor'),
      map-get($styles, 'textHoverColor'),
      map-get($styles, 'backgroundHoverColor'),
      map-get($styles, 'borderHoverColor')
    );
  }
}
